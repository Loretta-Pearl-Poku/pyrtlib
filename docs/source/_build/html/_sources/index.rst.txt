.. image:: ../../resources/logo/logo_large.png
  :width: 600

.. pyrtlib documentation master file, created by sphinx-quickstart on Fri Mar 19 09:49:16 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to pyrtlib's documentation!
====================================================

pyrtlib is a python tool that provides a set of
functions and classes for simulating ........

The source code for pyrtlib python package is hosted on `github
<https://github.com/slarosa/pyrtlib>`_.

.. image:: ../../resources/spectrum.png

.. code-block:: python
   :linenos:

   import numpy as np
   from pyrtlib.rte import RTEquation
   from pyrtlib.absmodel import H2OAbsModel, O2AbsModel
   from pyrtlib.linelist import h2o_linelist, o2_linelist
   from pyrtlib.atmp import AtmosphericProfiles as atmp
   from pyrtlib.utils import ppmv2gkg, mr2rh

   z, p, d, tk, md = atmp.gl_atm(atmp.TROPICAL)
   frq = np.arange(20, 201, 1)
   ice = 0
   gkg = ppmv2gkg(md[:, atmp.H20], atmp.H20)
   rh = mr2rh(p, tk, gkg)[0] / 100

   e, rho = RTEquation.vapor(tk, rh, ice)

   H2OAbsModel.model = 'rose19sd'
   H2OAbsModel.h2oll = h2o_linelist()
   O2AbsModel.model = 'rose19sd'
   O2AbsModel.o2ll = o2_linelist()
   for i in range(0, len(z)):
      v = 300.0 / tk[i]
      ekpa = e[i] / 10.0
      pdrykpa = p[i] / 10.0 - ekpa
      for j in range(0, len(frq)):
         _, _ = H2OAbsModel().h2o_rosen19_sd(pdrykpa, v, ekpa, frq[j])
         _, _ = O2AbsModel().o2abs_rosen18(pdrykpa, v, ekpa, frq[j])

Example:
--------
   Atmospheric profile definition:

   >>> z, p, _, t, md = atmp.gl_atm(atmp.TROPICAL)
   
   Units conversion:

   >>> gkg = ppmv2gkg(md[:, atmp.H20], atmp.H20)
   
   Relative humidity of H20 (water vapor)
   
   >>> rh = mr2rh(p, t, gkg)[0] / 100
   
   Deifinition of angles and frequencies:
   
   >>> ang = np.array([90.])
   >>> frq = np.arange(20, 201, 1)
   
   Initialization of liquid and ice array (not used in clear-sky):
  
   >>> denliq = np.zeros(z.shape)
   >>> denice = np.zeros(z.shape)
   >>> cldh = np.zeros((2, 0))
   
   Execution of the main script:
   
   >>> df = tb_cloud_rte(z, p, t, rh, denliq, denice, cldh, frq, ang,
   ...         absmdl='rose16',
   ...         ray_tracing=True,
   ...         from_sat=True)
   >>> df.tbtotal
   0      297.391838
   1      296.186240
   2      294.748245
   3      294.953483
   4      296.027799
            ...    
   176    275.997899
   177    276.611319
   178    277.129218
   179    277.566840
   180    277.936645
   Name: tbtotal, Length: 181, dtype: float64


.. toctree::
   :maxdepth: 4
   :caption: Contents:

   installation
   api

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
