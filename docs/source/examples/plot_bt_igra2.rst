
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_bt_igra2.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_plot_bt_igra2.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_bt_igra2.py:


Performing BT calculation from satellite using IGRA2 Upper Air Observations
=============================================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-10

This example shows how to use the
:py:class:`pyrtlib.tb_spectrum.TbCloudRTE` method to calculate brightness temperature from satellite using
observations from IGRA2 Upper Air Archive.

.. GENERATED FROM PYTHON SOURCE LINES 10-56

.. code-block:: python3


    import matplotlib.pyplot as plt

    plt.rcParams.update({'font.size': 15})
    import numpy as np
    from datetime import datetime

    from pyrtlib.tb_spectrum import TbCloudRTE
    from pyrtlib.utils import dewpoint2rh, import_lineshape, to_kelvin
    from pyrtlib.absorption_model import H2OAbsModel
    from pyrtlib.apiwebservices import IGRAUpperAir

    date = datetime(2020, 6, 1, 12)
    station = 'SPM00008221'
    df_igra2, header = IGRAUpperAir.request_data(date, station)

    df_igra2 = df_igra2[df_igra2.pressure.notna() & 
                        df_igra2.temperature.notna() & 
                        df_igra2.dewpoint.notna() & 
                        df_igra2.height.notna()]

    z, p, t = df_igra2.height.values / 1000, df_igra2.pressure.values, to_kelvin(df_igra2.temperature.values)

    rh = dewpoint2rh(df_igra2.dewpoint, df_igra2.temperature).values

    mdl = 'rose21sd'
    ang = np.array([90.])
    frq = np.arange(20, 201, 1)
    nf = len(frq)

    rte = TbCloudRTE(z, p, t, rh, frq, ang)
    rte.init_absmdl('rose20')
    rte.emissivity = 0.6
    H2OAbsModel.model = 'rose21sd'
    H2OAbsModel.h2oll = import_lineshape('h2oll_{}'.format(H2OAbsModel.model))
    df = rte.execute()
    df = df.set_index(frq)

    fig, ax = plt.subplots(1, 1, figsize=(12, 8))
    plt.suptitle("{}, {}, {} - {}".format(header.site_id.values[0], header.latitude.values[0], header.longitude.values[0], header.date.values[0]), y=0.96)
    plt.title("IGRA2 UpperAir Radiosonde Archive", fontsize=10, ha='center')
    ax.set_xlabel('Frequency [GHz]')
    ax.set_ylabel('${T_B}$ [K]')
    df.tbtotal.plot(ax=ax, linewidth=2, label='{} - {}'.format(header.site_id.values[0], mdl))
    ax.legend()
    plt.show()



.. image-sg:: /examples/images/sphx_glr_plot_bt_igra2_001.png
   :alt: SPM00008221, 40.4653, -3.5797 - 2020-06-01T12:00:00.000000000, IGRA2 UpperAir Radiosonde Archive
   :srcset: /examples/images/sphx_glr_plot_bt_igra2_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/slarosa/dev/pyrtlib/pyrtlib/apiwebservices/igra2.py:432: UserWarning: Pandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access
      df.units = {'etime': 'second',
    /Users/slarosa/dev/pyrtlib/pyrtlib/apiwebservices/igra2.py:470: UserWarning: Pandas doesn't allow columns to be created via a new attribute name - see https://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access
      df.units = {'release_time': 'second',





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  18.126 seconds)


.. _sphx_glr_download_examples_plot_bt_igra2.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_bt_igra2.py <plot_bt_igra2.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_bt_igra2.ipynb <plot_bt_igra2.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
